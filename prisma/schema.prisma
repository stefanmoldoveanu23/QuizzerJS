// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  username String
  password String
  verified Boolean
  code     String  @unique
  image    Boolean @default(false)
  Quizzes  Quiz[]

  @@map("users")
}

model Quiz {
  id          Int        @id @default(autoincrement())
  userId      Int        @map("user_id")
  User        User       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  name        String
  description String
  image       Boolean    @default(false)
  Questions   Question[]

  @@map("quizzes")
}

model Question {
  id        Int          @id @default(autoincrement())
  quizId    Int          @map("quiz_id")
  Quiz      Quiz         @relation(fields: [quizId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  type      QuestionType
  position  Int
  statement String
  choices   String[]
  answer    Int[]
  image     Boolean      @default(false)

  @@map("questions")
}

enum QuestionType {
  singleChoice
  multipleChoice
  association
  itemSort
}
